# Intel Compiler and options, compile with: make -f Makefile_intel
# assume MKL has been installed in directory $(MKLROOT), 
# metis is not used
FC = mpiifx
CC = mpiicx

# Flags - removed -C (check all) during linking as it can cause issues
FFLAGS = -g -nofor-main
CFLAGS = -O3 -qopenmp -DAdd_

# MUMPS paths
mumps = $(HOME)/Install/MUMPS_5.3.4
pord = $(mumps)/PORD
# metis = $(HOME)/Install/metis-5.1.0

# MKL libraries - fixed order
LMKL = -L$(MKLROOT)/lib/intel64 -lmkl_scalapack_lp64 -lmkl_blacs_intelmpi_lp64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core

# PORD includes and libraries
IPORD = -I$(pord)/include/
LPORD = -L$(pord)/lib/ -lpord

# MUMPS includes and libraries - CORRECTED ORDER
IMUMPS = -I$(mumps)/include
# Note: mumps_common must come before dmumps/cmumps
LMUMPS = -L$(mumps)/lib -ldmumps -lcmumps -lmumps_common

# METIS (uncomment if needed)
# IMETIS = -I$(metis)/include
# LMETIS = -L$(metis)/lib -lmetis

#===========================================================
BIN = .

# LIBRARY ORDER IS CRITICAL - CORRECTED
# Order: MUMPS libraries -> PORD -> MKL -> OpenMP -> system libraries
LIB = $(LMUMPS) $(LPORD) $(LMKL) -liomp5 -lpthread -lm -ldl
INC = $(IMUMPS) $(IPORD)  # $(IMETIS) if using METIS

SRC = $(wildcard *.c)
OBJ = $(SRC:.c=.o)

all: clean main

# Main target - removed -C from linking, added OpenMP flag
main: $(OBJ)
	$(FC) $(FFLAGS) -qopenmp -o $(BIN)/main $(OBJ) $(LIB)

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@ $(INC)

clean:
	find . -name "*.o"   -exec rm {} \;
	find . -name "*.c%"  -exec rm {} \;
	find . -name "*.bck" -exec rm {} \;
	find . -name "*~"    -exec rm {} \;
	find . -name "\#*"   -exec rm {} \;
	rm -f $(OBJ) main
